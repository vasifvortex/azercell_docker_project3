version: '3.8'
services:
  spark-master:
    container_name: spark-master
    deploy:
        resources:
            limits:
              cpus: '1'
              memory: "2g"
    build:
      context: ./Spark
    ports:
      - "4040:4040"
      - "7077:7077"
      - "8080:8080"
      - "18080:18080"
    networks:
      - spark-net
    command: sh spark-master.sh

  spark-worker:
    deploy:
        resources:
            limits:
              cpus: '1'
              memory: "2g"
    build:
      context: ./Spark
    depends_on:
      - spark-master
    ports:
      - "8081-8089:8081"
    networks:
      - spark-net
    command: sh spark-worker.sh

  spark-client:
    container_name: spark-client
    deploy:
        resources:
            limits:
              cpus: '1'
              memory: "2g"
    build:
      context: ./spark-client
    ports:
      - "8888:8888"
      - "4041:4040"
    networks:
      - spark-net
    volumes:
      - ./spark_client/examples:/opt/examples

# S3 compatible object storage: MinIO
  minio:
    container_name: minio
    deploy:
        resources:
            limits:
              cpus: '1'
              memory: "2g"
    image: "minio/minio:RELEASE.2023-05-04T21-44-30Z"
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - spark-net
    environment:
      MINIO_ACCESS_KEY: "telcoaz"
      MINIO_SECRET_KEY: "Telco12345"
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
volumes:
   minio:
      driver: local

networks:
  spark-net:
    external: true
